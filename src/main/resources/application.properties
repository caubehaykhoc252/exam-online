
# MySQL connection properties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mysql://localhost:3307/subjecttest?createDatabaseIfNotExist=true&useSSL=false
spring.jpa.open-in-view=false
# Log JPA queries
# Comment this in production
spring.jpa.show-sql=true

# Drop and create new tables (create, create-drop, validate, update)
# Only for testing purpose - comment this in production
spring.jpa.hibernate.ddl-auto=update

# Hibernate SQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#spring.jpa.generate-ddl=true
#----------------------------#

#----------Swagger------------
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#----------------------------#
#----------Flyway------------#
spring.flyway.url=jdbc:mysql://localhost:3307/subjecttest
spring.flyway.user=root
spring.flyway.password=123456
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

#----------------------------#
#----------redis-------------#
spring.cache.type=redis
spring.cache.redis.cache-null-values=true
spring.cache.redis.time-to-live=45000
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=30000

#----------------------------#
#----------JWT---------------#
jwt.signing.key.secret=mySecret
jwt.http.request.header=Authorization
jwt.token.expiration.in.seconds=604800


####################################
#                                  #
#       Root URL for service       #
#                                  #
####################################
api.url.root=/api

api.url.question=${api.url.root}/questions
api.url.question.getListQuestion=${api.url.question}/list
api.url.question.createQuestion=${api.url.question}/createQuestion
api.url.question.getQuestionById=${api.url.question}/getQuestionById
api.url.question.getListQuestionByTest=${api.url.question}/getListQuestionByTest
api.url.question.getTestDetail = ${api.url.question}/getTestDetail

api.url.testingDetail=${api.url.root}/testingDetails
api.url.testingDetail.createTestingDetail=${api.url.testingDetail}/createTestingDetail
api.url.testingDetail.getQuestionByTestId=${api.url.testingDetail}/getQuestionByTestId

api.url.testingResult=${api.url.root}/testingResults
api.url.testingResult.getTestingResult=${api.url.testingResult}/getTestingResultByTest

api.url.user=${api.url.root}/users
api.url.user.getListUser=${api.url.user}/getListUser
api.url.user.getUserById=${api.url.user}/getUserById

api.url.answerSheet = ${api.url.root}/answerSheet
api.url.answerSheet.createAnswerSheet = ${api.url.answerSheet}/createAnswerSheet
api.url.answerSheet.getListAnswer = ${api.url.answerSheet}/getListAnswer


api.url.exams = ${api.url.root}/exams
api.url.exams.getListTest = ${api.url.exams}/list
api.url.exams.createTest = ${api.url.exams}/createTest
api.url.exams.getTestingResult=${api.url.exams}/getTestingResultByTest
api.url.exams.getTimeByTestingResult=${api.url.exams}/getTimeByTestingResult
api.url.exams.getTestingResultByTestCode=${api.url.exams}/getTestingResultByTestCode

api.url.group = ${api.url.root}/groups
api.url.group.getListGroup =  ${api.url.group}/list
api.url.group.getListSubjectByGroup = ${api.url.group}/getListSubjectByGroup

